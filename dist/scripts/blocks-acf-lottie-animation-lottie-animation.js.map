{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../blocks/acf/lottie-animation/lottie-animation.js"],"names":["fetchFieldValue","lottieAnimationNode","inputName","callback","field","querySelector","value","innerText","remove","resizeUsingAnimationData","animationData","w","style","width","h","height","initLottieAnimation","renderer","speed","parseFloat","config","container","loop","autoplay","path","fetch","then","res","json","catch","JSON","parse","animation","Lottie","loadAnimation","setSpeed","animationPlaying","observerCallback","entries","forEach","entry","isIntersecting","play","pause","lottieObserver","IntersectionObserver","observe","initBlock"],"mappings":"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","file":"scripts/blocks-acf-lottie-animation-lottie-animation.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"blocks-acf-lottie-animation-lottie-animation\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/wp-content/themes/freshpress/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([13,\"common-helpers\",\"vendor-lottie-web\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * Lottie Animation.\n */\n\nimport Lottie from 'lottie-web';\n\nimport { initBlock } from 'scripts/helpers/_blocks';\n\nconst fetchFieldValue = ( lottieAnimationNode, inputName, callback = null ) => {\n\tconst field = lottieAnimationNode.querySelector( `[data-name=\"${ inputName }\"]` );\n\tif ( field ) {\n\t\tconst value = field.innerText;\n\t\tfield.remove();\n\n\t\tif ( typeof callback === 'function' ) {\n\t\t\treturn callback( value );\n\t\t}\n\n\t\treturn value;\n\t}\n\n\treturn null;\n};\n\nconst resizeUsingAnimationData = ( lottieAnimationNode, animationData ) => {\n\tif ( animationData ) {\n\t\tif ( animationData.w ) {\n\t\t\tlottieAnimationNode.style.width = `${ animationData.w }px}`;\n\t\t}\n\t\tif ( animationData.h ) {\n\t\t\tlottieAnimationNode.style.height = `${ animationData.h }px}`;\n\t\t}\n\t}\n};\n\nconst initLottieAnimation = ( lottieAnimationNode ) => {\n\tconst renderer = fetchFieldValue( lottieAnimationNode, 'renderer' );\n\tconst speed = fetchFieldValue( lottieAnimationNode, 'speed', parseFloat );\n\tconst config = {\n\t\tcontainer: lottieAnimationNode,\n\t\tloop: true,\n\t\trenderer,\n\t\tautoplay: false,\n\t};\n\n\tconst path = fetchFieldValue( lottieAnimationNode, 'animation-url' );\n\tif ( path ) {\n\t\tconfig.path = path;\n\t\t// eslint-disable-next-line no-undef\n\t\tfetch( path )\n\t\t\t.then( ( res ) => res.json() )\n\t\t\t.then( ( animationData ) => {\n\t\t\t\tif ( animationData ) {\n\t\t\t\t\tresizeUsingAnimationData( lottieAnimationNode, animationData );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( () => {\n\t\t\t\t// Set default values.\n\t\t\t\tresizeUsingAnimationData( lottieAnimationNode, { w: 500, h: 500 } );\n\t\t\t} );\n\t} else {\n\t\tconfig.animationData = fetchFieldValue( lottieAnimationNode, 'animation', JSON.parse );\n\t\tresizeUsingAnimationData( lottieAnimationNode, config.animationData );\n\t}\n\n\tconst animation = Lottie.loadAnimation( config );\n\tanimation.setSpeed( speed );\n\tlet animationPlaying = false;\n\n\tconst observerCallback = ( entries ) => {\n\t\tentries.forEach( ( entry ) => {\n\t\t\tif ( entry.isIntersecting && ! animationPlaying ) {\n\t\t\t\tanimation.play();\n\t\t\t\tanimationPlaying = true;\n\t\t\t} else if ( animationPlaying ) {\n\t\t\t\tanimation.pause();\n\t\t\t\tanimationPlaying = false;\n\t\t\t}\n\t\t} );\n\t};\n\n\t// eslint-disable-next-line no-undef\n\tconst lottieObserver = new IntersectionObserver( observerCallback );\n\tlottieObserver.observe( lottieAnimationNode );\n};\n\ninitBlock( '.lottie-animation', initLottieAnimation );\n"],"sourceRoot":""}