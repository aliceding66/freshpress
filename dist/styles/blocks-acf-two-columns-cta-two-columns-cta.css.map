{"version":3,"sources":["webpack:///../blocks/acf/two-columns-cta/two-columns-cta.scss","webpack:///two-columns-cta.scss","webpack:///./styles/_freshpress-mixins.scss","webpack:///./styles/_freshpress-variables.scss","webpack:////Users/xue.ding/freshpress-website/node_modules/bootstrap/scss/mixins/_buttons.scss","webpack:////Users/xue.ding/freshpress-website/node_modules/bootstrap/scss/mixins/_gradients.scss","webpack:////Users/xue.ding/freshpress-website/node_modules/bootstrap/scss/mixins/_hover.scss"],"names":[],"mappings":"AAMA;EACC;EACA;EACA;EACA,WANO;EAOP;ACLD;ACqKE;EFrKF;IAQE;ECJA;AACF;ACgKE;EFrKF;IAYE;ECHA;AACF;ADKC;EACC;EACA;EACA;EACA;EACA;EACA;ACHF;ACmJE;EFtJD;IAQE;IACA;IACA;ECDD;AACF;ADKE;EAEC;ACJH;ACyIE;EFvIA;IAIE;ECFF;AACF;ACoIE;EFhIA;IAEE;ECFF;AACF;AC+HE;EFhIA;IAKE;ECAF;AACF;AC0HE;EFxHA;IAEE;IACA;IACA;IACA;ECAF;AACF;ACkHE;EFxHA;IAQE;ECEF;AACF;AC6GE;EF5GD;IAEE;IACA;ECCD;AACF;ADCE;;EAEC,WAnEK;EAoEL;ACCH;ACkGE;EFtGA;;IAKE;ECIF;AACF;AC4FE;EFtGA;;IAQE;IACA;ECOF;AACF;ADLE;EACC;EACA;ACOH;ACiFE;EF1FA;IAIE;IACA;IACA;ECSF;AACF;ADPE;EACC;EACA;EACA;ACSH;ACqEE;EFjFA;IAKE;IACA;IACA;IACA;ECWF;AACF;AC6DE;EFjFA;IAWE;IACA;IACA;IACA;ECaF;AACF;ADVC;EACC;EACA,cGrEe;EHsEf;EACA;EACA;ACYF;AC8CE;EF/DD;IAOE;IACA;IACA;ECcD;EDbC;IACC;ECeF;AACF;ADZC;EACC;EACA;EACA;EACA;EACA;ACcF;AC6BE;EFhDD;IAQE;IACA;IACA;IACA;ECeD;AACF;ADdE;EIlIA;ECAE,yBFOQ;ECLV,qBDKU;EHoIT,WA7IK;ACwJR;AKhJE;EFAE;ECNA,yBLDU;EISV,qBJTU;AC4Jd;AGhJE;EAEE;ECbA,yBLDU;EIgBV,qBJhBU;EIqBR;AH6IN;AGxIE;EAEE;EACA,yBDrBQ;ECsBR,qBDtBQ;AF+JZ;AGlIE;EAGE;EACA,yBJzCU;EI6CV,qBJ7CU;AC4Kd;AG7HI;EAKI;AH2HR;ADlCG;EACC,WA/II;ACmLR,C","file":"styles/blocks-acf-two-columns-cta-two-columns-cta.css","sourcesContent":["// Two Columns CTA.\n\n@import '~styles/freshpress-includes';\n\n$white: #fff;\n$button-blue: #0064bc;\n.two-columns-cta {\n\tposition: relative;\n\tmargin: 0 -15px;\n\tpadding: 52px 0;\n\tcolor: $white;\n\tbackground-color: $midnight-blue;\n\n\t@include media-breakpoint-up( md ) {\n\t\tpadding: 86px 0 87px;\n\t}\n\n\t@include media-breakpoint-up( lg ) {\n\t\tpadding: 100px 0 94px;\n\t}\n\n\t&__container {\n\t\tposition: relative;\n\t\tz-index: 3;\n\t\twidth: 1209px;\n\t\tmax-width: 100%;\n\t\tmargin: 0 auto;\n\t\tpadding: 0 22px;\n\t\t@include media-breakpoint-up( md ) {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: space-between;\n\t\t}\n\t}\n\n\t&__content {\n\t\t&_left,\n\t\t&_right {\n\t\t\ttext-align: center;\n\t\t\t@include media-breakpoint-up( md ) {\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t}\n\t\t&_left {\n\t\t\t@include media-breakpoint-up( md ) {\n\t\t\t\twidth: 361px;\n\t\t\t}\n\t\t\t@include media-breakpoint-up( lg ) {\n\t\t\t\twidth: 643px;\n\t\t\t}\n\t\t}\n\t\t&_right {\n\t\t\t@include media-breakpoint-up( md ) {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: flex-end;\n\t\t\t\twidth: 380px;\n\t\t\t}\n\t\t\t@include media-breakpoint-up( lg ) {\n\t\t\t\twidth: 438px;\n\t\t\t}\n\t\t}\n\t}\n\t&__hightlighed {\n\t\t@include media-breakpoint-up( lg ) {\n\t\t\tdisplay: flex;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\th2,\n\t\tp {\n\t\t\tcolor: $white;\n\t\t\tfont-weight: 400;\n\t\t\t@include media-breakpoint-up( md ) {\n\t\t\t\tdisplay: inline;\n\t\t\t}\n\t\t\t@include media-breakpoint-up( lg ) {\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\t\t}\n\t\th2 {\n\t\t\tfont-size: px-to-rem( 36 );\n\t\t\tline-height: px-to-rem( 26 );\n\t\t\t@include media-breakpoint-up( lg ) {\n\t\t\t\twidth: 248px;\n\t\t\t\tfont-size: px-to-rem( 54 );\n\t\t\t\tline-height: px-to-rem( 51 );\n\t\t\t}\n\t\t}\n\t\tp {\n\t\t\tmargin-bottom: 56px;\n\t\t\tfont-size: px-to-rem( 18 );\n\t\t\tline-height: px-to-rem( 26 );\n\t\t\t@include media-breakpoint-up( lg ) {\n\t\t\t\twidth: 367px;\n\t\t\t\tmargin-right: 10px;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tmargin-left: 10px;\n\t\t\t}\n\t\t\t@include media-breakpoint-up( xl ) {\n\t\t\t\twidth: 367px;\n\t\t\t\tmargin-right: 0;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tmargin-left: 30px;\n\t\t\t}\n\t\t}\n\t}\n\t&__cta-description {\n\t\tmargin-top: 8px;\n\t\tcolor: $new-light-blue;\n\t\tfont-size: px-to-rem( 13 );\n\t\tline-height: px-to-rem( 14 );\n\t\tletter-spacing: 0.05em;\n\t\t@include media-breakpoint-up( md ) {\n\t\t\twidth: 141px;\n\t\t\tmargin-top: 0;\n\t\t\tmargin-left: 20px;\n\t\t\tp {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\t\t}\n\t}\n\t.btn {\n\t\tmax-width: 219px;\n\t\tpadding: 11px;\n\t\tfont-weight: 500;\n\t\tfont-size: px-to-rem( 20 );\n\t\tline-height: px-to-rem( 23.8 );\n\n\t\t@include media-breakpoint-up( lg ) {\n\t\t\tmax-width: 280px;\n\t\t\tpadding: 13px 28px;\n\t\t\tfont-size: px-to-rem( 24 );\n\t\t\tline-height: px-to-rem( 26 );\n\t\t}\n\t\t&-cta-blue {\n\t\t\t@include button-variant(\n\t\t\t\t$fresh-new,\n\t\t\t\t$fresh-new,\n\t\t\t\t$button-blue,\n\t\t\t\t$button-blue,\n\t\t\t\t$button-blue,\n\t\t\t\t$button-blue\n\t\t\t);\n\t\t\tcolor: $white;\n\t\t\t&:hover {\n\t\t\t\tcolor: $white;\n\t\t\t}\n\t\t}\n\t}\n}\n",".two-columns-cta {\n  position: relative;\n  margin: 0 -15px;\n  padding: 52px 0;\n  color: #fff;\n  background-color: #001b40;\n}\n@media (min-width: 768px) {\n  .two-columns-cta {\n    padding: 86px 0 87px;\n  }\n}\n@media (min-width: 1024px) {\n  .two-columns-cta {\n    padding: 100px 0 94px;\n  }\n}\n.two-columns-cta__container {\n  position: relative;\n  z-index: 3;\n  width: 1209px;\n  max-width: 100%;\n  margin: 0 auto;\n  padding: 0 22px;\n}\n@media (min-width: 768px) {\n  .two-columns-cta__container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n}\n.two-columns-cta__content_left, .two-columns-cta__content_right {\n  text-align: center;\n}\n@media (min-width: 768px) {\n  .two-columns-cta__content_left, .two-columns-cta__content_right {\n    text-align: left;\n  }\n}\n@media (min-width: 768px) {\n  .two-columns-cta__content_left {\n    width: 361px;\n  }\n}\n@media (min-width: 1024px) {\n  .two-columns-cta__content_left {\n    width: 643px;\n  }\n}\n@media (min-width: 768px) {\n  .two-columns-cta__content_right {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    width: 380px;\n  }\n}\n@media (min-width: 1024px) {\n  .two-columns-cta__content_right {\n    width: 438px;\n  }\n}\n@media (min-width: 1024px) {\n  .two-columns-cta__hightlighed {\n    display: flex;\n    width: 100%;\n  }\n}\n.two-columns-cta__hightlighed h2,\n.two-columns-cta__hightlighed p {\n  color: #fff;\n  font-weight: 400;\n}\n@media (min-width: 768px) {\n  .two-columns-cta__hightlighed h2,\n.two-columns-cta__hightlighed p {\n    display: inline;\n  }\n}\n@media (min-width: 1024px) {\n  .two-columns-cta__hightlighed h2,\n.two-columns-cta__hightlighed p {\n    display: block;\n    margin-bottom: 0;\n  }\n}\n.two-columns-cta__hightlighed h2 {\n  font-size: 2.25rem;\n  line-height: 1.625rem;\n}\n@media (min-width: 1024px) {\n  .two-columns-cta__hightlighed h2 {\n    width: 248px;\n    font-size: 3.375rem;\n    line-height: 3.1875rem;\n  }\n}\n.two-columns-cta__hightlighed p {\n  margin-bottom: 56px;\n  font-size: 1.125rem;\n  line-height: 1.625rem;\n}\n@media (min-width: 1024px) {\n  .two-columns-cta__hightlighed p {\n    width: 367px;\n    margin-right: 10px;\n    margin-bottom: 0;\n    margin-left: 10px;\n  }\n}\n@media (min-width: 1280px) {\n  .two-columns-cta__hightlighed p {\n    width: 367px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 30px;\n  }\n}\n.two-columns-cta__cta-description {\n  margin-top: 8px;\n  color: #ecf5fd;\n  font-size: 0.8125rem;\n  line-height: 0.875rem;\n  letter-spacing: 0.05em;\n}\n@media (min-width: 768px) {\n  .two-columns-cta__cta-description {\n    width: 141px;\n    margin-top: 0;\n    margin-left: 20px;\n  }\n  .two-columns-cta__cta-description p {\n    margin-bottom: 0;\n  }\n}\n.two-columns-cta .btn {\n  max-width: 219px;\n  padding: 11px;\n  font-weight: 500;\n  font-size: 1.25rem;\n  line-height: 1.4875rem;\n}\n@media (min-width: 1024px) {\n  .two-columns-cta .btn {\n    max-width: 280px;\n    padding: 13px 28px;\n    font-size: 1.5rem;\n    line-height: 1.625rem;\n  }\n}\n.two-columns-cta .btn-cta-blue {\n  color: #fff;\n  background-color: #0075dd;\n  border-color: #0075dd;\n  color: #fff;\n}\n.two-columns-cta .btn-cta-blue:hover {\n  color: #fff;\n  background-color: #0064bc;\n  border-color: #0064bc;\n}\n.two-columns-cta .btn-cta-blue:focus, .two-columns-cta .btn-cta-blue.focus {\n  color: #fff;\n  background-color: #0064bc;\n  border-color: #0064bc;\n  box-shadow: 0 0 0 0.2rem rgba(38, 138, 226, 0.5);\n}\n.two-columns-cta .btn-cta-blue.disabled, .two-columns-cta .btn-cta-blue:disabled {\n  color: #fff;\n  background-color: #0075dd;\n  border-color: #0075dd;\n}\n.two-columns-cta .btn-cta-blue:not(:disabled):not(.disabled):active, .two-columns-cta .btn-cta-blue:not(:disabled):not(.disabled).active, .show > .two-columns-cta .btn-cta-blue.dropdown-toggle {\n  color: #fff;\n  background-color: #0064bc;\n  border-color: #0064bc;\n}\n.two-columns-cta .btn-cta-blue:not(:disabled):not(.disabled):active:focus, .two-columns-cta .btn-cta-blue:not(:disabled):not(.disabled).active:focus, .show > .two-columns-cta .btn-cta-blue.dropdown-toggle:focus {\n  box-shadow: 0 0 0 0.2rem rgba(38, 138, 226, 0.5);\n}\n.two-columns-cta .btn-cta-blue:hover {\n  color: #fff;\n}","// Declare custom mixins\n\n/// Output Map\n/// @author FreshBooks Website Services Team\n/// @param {Map} $map - Map\n/// @output {*} - all of the properties and values in the map as sass props and vals\n\n@mixin output-map( $map ) {\n\t@each $prop, $value in $map {\n\t\t#{$prop}: $value;\n\t}\n}\n\n/// Output Map\n/// @author FreshBooks Website Services Team\n/// @param {Map} $map - Map - expected to be a map with the following schema:\n/// \t\t$map: (\n/// \t\t\tbreakpoint: (\n/// \t\t\t\tcss-prop: css-value,\n/// \t\t\t\tanother-css-prop: another-css-value,\n/// \t\t\t),\n/// \t\t\tanother-breakpoint: (\n/// \t\t\t\tcss-prop: css-value,\n/// \t\t\t\tanother-css-prop: another-css-value,\n/// \t\t\t),\n/// \t\t)\n/// Where breakpoint is one of the keys in the $grid-breakpoints map defined in _freshpress-variables.scss:\n/// And css-prop: css-value are regular CSS props and values\n/// @param {String} $scope - one of \"up\", \"down\" or \"only\" to define the direction of the media queries.\n/// @output {*} - all of the properties and values in the map as sass props and values as bound by the media queries and breakpoints provided\n\n@mixin output-responsive-map( $map, $scope: up ) {\n\t@each $breakpoint, $bp-map in $map {\n\t\t@if $scope == up {\n\t\t\t@include media-breakpoint-up( $breakpoint ) {\n\t\t\t\t@include output-map( $bp-map );\n\t\t\t}\n\t\t}\n\t\t@if $scope == down {\n\t\t\t@include media-breakpoint-down( $breakpoint ) {\n\t\t\t\t@include output-map( $bp-map );\n\t\t\t}\n\t\t}\n\t\t@if $scope == only {\n\t\t\t@include media-breakpoint-only( $breakpoint ) {\n\t\t\t\t@include output-map( $bp-map );\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// Aspect Ratio Box\n/// @author FreshBooks Website Services Team\n/// @param {number} $width - the width of the aspect ratio expressed as an integer without unit\n/// @param {number} $height - the height of the aspect ratio expressed as an integer without unit\n/// @output {*} - Scoped pseudo elements that will maintain a **minimum** aspect ratio for the selector the\n/// mixin is included in.  it will allow for content to expand beyond the size of the box and not break the layout.\n/// @link https://css-tricks.com/aspect-ratio-boxes/\n\n@mixin aspect-ratio-box( $width, $height ) {\n\t&::before {\n\t\tfloat: left;\n\t\twidth: 1px;\n\t\theight: 0;\n\t\tmargin-left: -1px;\n\t\tpadding-top: $height / $width * 100%;\n\t\tcontent: '';\n\t}\n\t&::after {\n\t\tdisplay: table;\n\t\tclear: both;\n\t\tcontent: '';\n\t}\n}\n\n// Now import the bootstrap mixins\n// @import '~bootstrap/scss/mixins';\n@import '~bootstrap/scss/vendor/rfs';\n@import '~bootstrap/scss/mixins/deprecate';\n@import '~bootstrap/scss/mixins/buttons';\n@import '~bootstrap/scss/mixins/screen-reader';\n@import '~bootstrap/scss/mixins/text-truncate';\n@import '~bootstrap/scss/mixins/box-shadow';\n@import '~bootstrap/scss/mixins/gradients';\n@import '~bootstrap/scss/mixins/hover';\n@import '~bootstrap/scss/mixins/image';\n@import '~bootstrap/scss/mixins/border-radius';\n@import '~bootstrap/scss/mixins/grid';\n@import '~bootstrap/scss/mixins/grid-framework';\n@import '~bootstrap/scss/mixins/table-row';\n@import '~bootstrap/scss/mixins/forms';\n@import '~bootstrap/scss/mixins/transition';\n@import '~bootstrap/scss/mixins/background-variant';\n@import '~bootstrap/scss/mixins/clearfix';\n@import '~bootstrap/scss/mixins/text-emphasis';\n@import '~bootstrap/scss/mixins/text-hide';\n@import '~bootstrap/scss/mixins/alert';\n@import '~bootstrap/scss/mixins/reset-text';\n@import '~bootstrap/scss/mixins/lists';\n@import '~bootstrap/scss/mixins/list-group';\n\n// Getting necessary mixins here, instead of including incompatoble ones from @import '~bootstrap/scss/mixins' just pasting them here and modifying accordingly.\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next(\n\t$name,\n\t$breakpoints: $grid-breakpoints,\n\t$breakpoint-names: map-keys( $breakpoints )\n) {\n\t$n: index( $breakpoint-names, $name );\n\t@return if(\n\t\t$n != null and $n < length( $breakpoint-names ),\n\t\tnth( $breakpoint-names, $n + 1 ),\n\t\tnull\n\t);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min( $name, $breakpoints: $grid-breakpoints ) {\n\t$min: map-get( $breakpoints, $name );\n\t@return if( $min != 0, $min, null );\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max( $name, $breakpoints: $grid-breakpoints ) {\n\t$next: breakpoint-next( $name, $breakpoints );\n\t@return if( $next, breakpoint-min( $next, $breakpoints ) - 0.02, null );\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix( $name, $breakpoints: $grid-breakpoints ) {\n\t@return if( breakpoint-min( $name, $breakpoints ) == null, '', '-#{$name}' );\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up( $name, $breakpoints: $grid-breakpoints ) {\n\t$min: breakpoint-min( $name, $breakpoints );\n\t@if $min {\n\t\t@media ( min-width: $min ) {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@content;\n\t}\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down( $name, $breakpoints: $grid-breakpoints ) {\n\t$max: breakpoint-max( $name, $breakpoints );\n\t@if $max {\n\t\t@media ( max-width: $max ) {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@content;\n\t}\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between( $lower, $upper, $breakpoints: $grid-breakpoints ) {\n\t$min: breakpoint-min( $lower, $breakpoints );\n\t$max: breakpoint-max( $upper, $breakpoints );\n\n\t@if $min != null and $max != null {\n\t\t@media ( min-width: $min ) and ( max-width: $max ) {\n\t\t\t@content;\n\t\t}\n\t} @else if $max == null {\n\t\t@include media-breakpoint-up( $lower, $breakpoints ) {\n\t\t\t@content;\n\t\t}\n\t} @else if $min == null {\n\t\t@include media-breakpoint-down( $upper, $breakpoints ) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only( $name, $breakpoints: $grid-breakpoints ) {\n\t$min: breakpoint-min( $name, $breakpoints );\n\t$max: breakpoint-max( $name, $breakpoints );\n\n\t@if $min != null and $max != null {\n\t\t@media ( min-width: $min ) and ( max-width: $max ) {\n\t\t\t@content;\n\t\t}\n\t} @else if $max == null {\n\t\t@include media-breakpoint-up( $name, $breakpoints ) {\n\t\t\t@content;\n\t\t}\n\t} @else if $min == null {\n\t\t@include media-breakpoint-down( $name, $breakpoints ) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n","// Paths.\n$global_images_path: '~images';\n$dibs_images_path: '~images';\n$fonts_path: '~fonts';\n\n// Colours.\n$button-grey: #8596a2;\n$cta-green: #36a900;\n$dark-cta-green: #2e9000;\n$bright-blue: #359ce4;\n$fresh-blue: #0075dd;\n$midnight-blue: #001b40;\n$pre-midnight-blue: #062942;\n$fresh-new: #0075dd; // This is slowly being used in place of fresh-blue\n$medium-blue: #005dab;\n$dark-blue: #0062af;\n$amber: #efc100;\n$admin_black: #3c434a;\n\n// Border colours.\n$border-blue: #ccdfef;\n$border-blue-bold: #cde6f8;\n$fb-grey-border-menu: #eef1f3;\n$outline-grey: #b4bec6;\n$rule-grey-secondary: #ced5da;\n$rule-grey: #cdd4d9;\n$table-grey: #c5c7ce;\n$border-yellow: #ffc414;\n$border-grayish-blue: #9ba9b3;\n\n// Background colours.\n$dark-grey: #8495a2;\n$ghost-white: #fafafb;\n$mobile-sub-menu: #f7f8f9;\n$off-white: #fafdff;\n$card-tab-grey: #f0f2f4;\n$select-blue: #0060af;\n$blue-secondary-content: #eff8fe;\n$product-tour-blue: #eaf6fe;\n$box-grey: #fbfdfe;\n$light-blue: #eff8fe;\n$new-light-blue: #ecf5fd;\n$table-header-grey: #f2f4f5;\n$light-blue-highlight: #f5fbff;\n$light-cream: #fffaea;\n$light-cream-secondary: #fff9e4;\n$dark-cream: #fcf3cc;\n$tile-blue: #002d79;\n$tile-highlight-blue: #0069c7;\n$fresh-blue-light: #0d83dd;\n$additional-blue: #9fcef2;\n$pale-blue: #d3eafe;\n$pale-yellow: #fff9e8;\n$snippet-grey: #232323;\n\n// Font colours.\n$subtext-grey: #6a7f8e;\n$font-grey: #8294a0;\n$light-grey: #8394a1;\n$soft-blue: #b6daf5;\n$pale-blue: #9fcef2;\n$accessible-grey: #66768c;\n$accessible-grey-on-light-blue-bg: #405470;\n\n// Form Colours\n// $form-feedback-valid-color: $rule-grey;\n$form-feedback-invalid-color: #fa405c;\n\n// Line colors\n$grey-line-color: #e5e9eb;\n$border-grey-line-color: #e6e0d1;\n$blue-line-color: #4d9ee7;\n\n// Bootstrap Icons\n$form-feedback-icon-invalid: url( ./../images/icons/cross-red.svg );\n\n// Set the default breadcrumb divider.\n$breadcrumb-divider: quote( '>' );\n\n// Set bootstrap variable defaults before importing bootstrap variables.\n\n// Breakpoints.\n$grid-breakpoints: (\n\txs: 0,\n\tsm: 480px,\n\tmd: 768px,\n\tlg: 1024px,\n\txl: 1280px,\n\txxl: 1600px,\n);\n\n// Spacers.\n$spacer: 1rem !default;\n$spacers: () !default;\n$spacers: map-merge(\n\t(\n\t\t// Default.\n\t\t0: 0,\n\t\t1: ( $spacer * 0.25 ),\n\t\t2: ( $spacer * 0.5 ),\n\t\t3: $spacer,\n\t\t4: ( $spacer * 1.5 ),\n\t\t5: ( $spacer * 3 ),\n\t\t// Extended.\n\t\t6: ( $spacer * 4.5 ),\n\t\t7: ( $spacer * 6 ),\n\t\t8: ( $spacer * 7.5 ),\n\t\t9: ( $spacer * 9 )\n\t),\n\t$spacers\n);\n\n$header-breakpoint: 1025px;\n\n// Typography.\n\n// Base font size.\n$font-size-root: 16px;\n\n// Default sans serif font stack.\n$font-family-sans-serif: founders-grotesk, helvetica, arial, sans-serif !default;\n\n// Additional fonts\n$font-family-p: ibm-plex-sans, founders-grotesk, helvetica, arial, sans-serif;\n$font-freshbooks-script: moranga-italic, helvetica, arial, sans-serif;\n$font-script-regular: freshbooksscript-regular, helvetica, arial, sans-serif;\n$font-icon: icomoon, helvetica, arial, sans-serif;\n\n// Default body colour.\n$body-color: $midnight-blue !default;\n\n// Responsive headings.\n$h1-values: (\n\txs: (\n\t\tfont-size: px-to-rem( 24 ),\n\t\tline-height: calc( 29 / 24 ),\n\t\tletter-spacing: -0.2px,\n\t),\n\tmd: (\n\t\tfont-size: px-to-rem( 42 ),\n\t\tline-height: calc( 48 / 40 ),\n\t\tletter-spacing: -0.3px,\n\t),\n\tlg: (\n\t\tfont-size: px-to-rem( 48 ),\n\t\tline-height: calc( 51 / 48 ),\n\t),\n);\n$h2-values: (\n\txs: (\n\t\tfont-size: px-to-rem( 26 ),\n\t\tline-height: calc( 33 / 26 ),\n\t\tletter-spacing: -0.15px,\n\t),\n\tmd: (\n\t\tfont-size: px-to-rem( 36 ),\n\t\tline-height: calc( 42 / 36 ),\n\t\tletter-spacing: -0.2px,\n\t),\n\tlg: (\n\t\tfont-size: px-to-rem( 38 ),\n\t\tline-height: calc( 44 / 38 ),\n\t),\n);\n$h3-values: (\n\txs: (\n\t\tfont-size: px-to-rem( 22 ),\n\t\tline-height: calc( 27 / 22 ),\n\t\tletter-spacing: -0.1px,\n\t),\n\tmd: (\n\t\tfont-size: px-to-rem( 26 ),\n\t\tline-height: calc( 32 / 26 ),\n\t\tletter-spacing: -0.15px,\n\t),\n\tlg: (\n\t\tfont-size: px-to-rem( 28 ),\n\t\tline-height: calc( 34 / 28 ),\n\t),\n);\n$h4-values: (\n\txs: (\n\t\tfont-size: px-to-rem( 20 ),\n\t\tline-height: calc( 25 / 20 ),\n\t\tletter-spacing: -0.1px,\n\t),\n\tlg: (\n\t\tfont-size: px-to-rem( 22 ),\n\t\tline-height: calc( 27 / 22 ),\n\t),\n);\n$h5-values: (\n\txs: (\n\t\tfont-size: px-to-rem( 16 ),\n\t\tline-height: calc( 22 / 16 ),\n\t\tletter-spacing: -0.5px,\n\t),\n);\n$h6-values: (\n\txs: (\n\t\tfont-size: px-to-rem( 16 ),\n\t\tline-height: calc( 22 / 16 ),\n\t\tletter-spacing: -0.5px,\n\t),\n);\n\n// Titles.\n$h1-font-size: map-get( $h1-values, xs );\n$h2-font-size: map-get( $h2-values, xs );\n$h3-font-size: map-get( $h3-values, xs );\n$h4-font-size: map-get( $h4-values, xs );\n$h5-font-size: map-get( $h5-values, xs );\n$h6-font-size: map-get( $h6-values, xs );\n\n// Reusable base values.\n$base-values: (\n\tfont-size: 1.125rem,\n\tline-height: calc( 26 / 18 ),\n\tletter-spacing: 0,\n\tmargin-bottom: 1.188rem,\n);\n\n// Borders\n$border-color: $rule-grey !default;\n$border-radius: 0.5rem !default;\n$border-radius-lg: 0.5rem !default;\n$border-radius-sm: 0.5rem !default;\n\n// Code\n$pre-scrollable-max-height: 25rem !default;\n\n// Form spacing\n$form-group-margin-bottom: 0.5rem;\n\n// Then import the bootstrap variables.\n@import '~bootstrap/scss/variables';\n\n// Finally, declare our own custom variables.\n\n// Typography\n\n// Default font stack.\n$fb-font-family: $font-family-sans-serif;\n\n// Font weights.\n$font-weight-book: $font-weight-normal;\n$font-weight-medium: 500;\n$font-weight-demi: $font-weight-bold;\n\n// Supported country codes and flags\n$flag-icons-path: '~flag-icons/flags';\n$country-codes: ( au, ca, eu, fr, gb, ie, nz, us, za, sg );\n\n// The inner width of some elements, like the footer.\n$inner-max-width-lg: 928px;\n$inner-max-width-xl: 1170px;\n\n// Box shadows\n$box-shadow-main: 4px 4px 0 rgba( $midnight-blue, 0.07 );\n\n// Z-index\n$zindex-background: -1;\n$zindex-sticky-header: 1100;\n$zindex-progress-bar: 9999;\n$zindex-modal: 10000;\n\n// DIBS page\n$dibs-block-max-width: 650px;\n","// Button variants\n//\n// Easily pump out default styles, as well as :hover, :focus, :active,\n// and disabled options for all buttons\n\n@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {\n  color: color-yiq($background);\n  @include gradient-bg($background);\n  border-color: $border;\n  @include box-shadow($btn-box-shadow);\n\n  @include hover() {\n    color: color-yiq($hover-background);\n    @include gradient-bg($hover-background);\n    border-color: $hover-border;\n  }\n\n  &:focus,\n  &.focus {\n    color: color-yiq($hover-background);\n    @include gradient-bg($hover-background);\n    border-color: $hover-border;\n    @if $enable-shadows {\n      @include box-shadow($btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5));\n    } @else {\n      // Avoid using mixin so we can pass custom focus shadow properly\n      box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);\n    }\n  }\n\n  // Disabled comes first so active can properly restyle\n  &.disabled,\n  &:disabled {\n    color: color-yiq($background);\n    background-color: $background;\n    border-color: $border;\n    // Remove CSS gradients if they're enabled\n    @if $enable-gradients {\n      background-image: none;\n    }\n  }\n\n  &:not(:disabled):not(.disabled):active,\n  &:not(:disabled):not(.disabled).active,\n  .show > &.dropdown-toggle {\n    color: color-yiq($active-background);\n    background-color: $active-background;\n    @if $enable-gradients {\n      background-image: none; // Remove the gradient for the pressed/active state\n    }\n    border-color: $active-border;\n\n    &:focus {\n      @if $enable-shadows and $btn-active-box-shadow != none {\n        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5));\n      } @else {\n        // Avoid using mixin so we can pass custom focus shadow properly\n        box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);\n      }\n    }\n  }\n}\n\n@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {\n  color: $color;\n  border-color: $color;\n\n  @include hover() {\n    color: $color-hover;\n    background-color: $active-background;\n    border-color: $active-border;\n  }\n\n  &:focus,\n  &.focus {\n    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);\n  }\n\n  &.disabled,\n  &:disabled {\n    color: $color;\n    background-color: transparent;\n  }\n\n  &:not(:disabled):not(.disabled):active,\n  &:not(:disabled):not(.disabled).active,\n  .show > &.dropdown-toggle {\n    color: color-yiq($active-background);\n    background-color: $active-background;\n    border-color: $active-border;\n\n    &:focus {\n      @if $enable-shadows and $btn-active-box-shadow != none {\n        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5));\n      } @else {\n        // Avoid using mixin so we can pass custom focus shadow properly\n        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);\n      }\n    }\n  }\n}\n\n// Button sizes\n@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {\n  padding: $padding-y $padding-x;\n  @include font-size($font-size);\n  line-height: $line-height;\n  // Manually declare to provide an override to the browser default\n  @include border-radius($border-radius, 0);\n}\n","// Gradients\n\n@mixin gradient-bg($color) {\n  @if $enable-gradients {\n    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x;\n  } @else {\n    background-color: $color;\n  }\n}\n\n// Horizontal gradient, from left to right\n//\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\n@mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {\n  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);\n  background-repeat: repeat-x;\n}\n\n// Vertical gradient, from top to bottom\n//\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\n@mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {\n  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);\n  background-repeat: repeat-x;\n}\n\n@mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {\n  background-image: linear-gradient($deg, $start-color, $end-color);\n  background-repeat: repeat-x;\n}\n@mixin gradient-x-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {\n  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);\n  background-repeat: no-repeat;\n}\n@mixin gradient-y-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {\n  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);\n  background-repeat: no-repeat;\n}\n@mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {\n  background-image: radial-gradient(circle, $inner-color, $outer-color);\n  background-repeat: no-repeat;\n}\n@mixin gradient-striped($color: rgba($white, .15), $angle: 45deg) {\n  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);\n}\n","// Hover mixin and `$enable-hover-media-query` are deprecated.\n//\n// Originally added during our alphas and maintained during betas, this mixin was\n// designed to prevent `:hover` stickiness on iOS-an issue where hover styles\n// would persist after initial touch.\n//\n// For backward compatibility, we've kept these mixins and updated them to\n// always return their regular pseudo-classes instead of a shimmed media query.\n//\n// Issue: https://github.com/twbs/bootstrap/issues/25195\n\n@mixin hover() {\n  &:hover { @content; }\n}\n\n@mixin hover-focus() {\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin plain-hover-focus() {\n  &,\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin hover-focus-active() {\n  &:hover,\n  &:focus,\n  &:active {\n    @content;\n  }\n}\n"],"sourceRoot":""}